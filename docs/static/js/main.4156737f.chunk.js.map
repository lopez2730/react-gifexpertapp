{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","PropType","PropTypes","func","isRequired","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","imgs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,aAwBhCZ,EAAYe,SAAW,CACnBd,cAAee,IAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC6EF,EAD7E,gDAEAG,MAAQD,GAFR,cAEbE,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAaZK,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAErC,OADAa,QAAQC,IAAIN,EAAIC,EAAOT,GAEnB,sBAAKe,UAAU,wCAAf,UACE,qBAAKC,IAAKhB,EAAKiB,IAAMR,IACrB,kCAAKA,EAAL,WCFGS,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0BlB,mBAAS,CAC/BwB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WAEPzB,EAAQC,GACHyB,MAAM,SAAAhB,GACHM,QAAQC,IAAIP,GACZc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAItB,CAACrB,IAIGsB,EDlBsBI,CAAc1B,GAA/B2B,EAAZ,EAAOrB,KAAWe,EAAlB,EAAkBA,QAKlB,OACI,qCACI,oBAAIJ,UAAU,mCAAd,SAAmDjB,IAClDqB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQU,EAAKnB,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEfzBkB,EAAe,WAGxB,MAAoC9C,mBAAS,CAAC,aAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAOA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAGQgD,EAAWrB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MClB7B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4156737f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.PropType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=NwPbHQ0N67BMDVska7fWDWjPxDxTOmBO&q=${(category)}&limit=10&offset=0&rating=g&lang=en`\r\n    const resp = await fetch ( url )\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}\r\n// getGifs()\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate_animated animate__fadeIn\">\r\n          <img src={url} alt={ title }/>\r\n          <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:imgs, loading} = useFetchGifs( category )\r\n \r\n   \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate_animated animate__fadeIn\">{ category }</h3>\r\n            {loading && <p className=\"animate_animated animate__fadeIn\">Loanding...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imgs.map(img =>(\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport {getGifs} from '../helpers/GetGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect (()=>{\r\n\r\n        getGifs(category)\r\n            .then( img=>{\r\n                console.log(img)\r\n                setState({\r\n                    data: img,\r\n                    loading: false,\r\n                })\r\n\r\n            })\r\n    }, [category])\r\n\r\n\r\n   \r\n    return state; //{data: [], loading: true }\r\n\r\n}\r\n\r\n\r\n // useEffect( () =>{\r\n    //     getGifs( category )\r\n    //     .then( setImages )\r\n    // }, [category])  \r\n    //los que estÃ¡ dentro de los [] significa que solo quieres que se renderice 1 vez","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Inuyasha'])\r\n\r\n\r\n    // const handleAdd = () =>{\r\n    //    setCategories(cats => [...cats, 'Inuyasha'])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {/* <button onClick={handleAdd}>Agregar</button> */}\r\n                {\r\n                    categories.map( category  =>( \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GitExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}